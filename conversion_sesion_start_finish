WITH user_sessions AS (
  SELECT
    DATE(TIMESTAMP_MICROS(event_timestamp)) AS event_date,
    -- dodanie CONCAT(CAST(user_pseudo_id AS string), CAST(event_bundle_sequence_id AS string)) AS session_id, w jakiś sposób psuje agregacje. 
    (select value.int_value from unnest(event_params) where key = 'ga_session_id' ) as session_id,
    user_pseudo_id,
    traffic_source.source AS source,
    traffic_source.medium AS medium,
    traffic_source.name AS campaign
  FROM
    `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_2021*`
  WHERE
    event_name = 'session_start'
),
conversion_steps AS (
  SELECT
    user_pseudo_id,
    (select value.int_value from unnest(event_params) where key = 'ga_session_id' ) as session_id,
    MAX(CASE WHEN event_name = 'add_to_cart' THEN 1 ELSE 0 END) AS visit_to_cart,
    MAX(CASE WHEN event_name = 'begin_checkout' THEN 1 ELSE 0 END) AS visit_to_checkout,
    MAX(CASE WHEN event_name = 'purchase' THEN 1 ELSE 0 END) AS visit_to_purchase
  FROM
    `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_2021*`
  WHERE
    event_name IN ('add_to_cart', 'begin_checkout', 'purchase')
  GROUP BY
    user_pseudo_id, session_id
)
SELECT
  us.event_date,
  us.source,
  us.medium,
  us.campaign,
  COUNT(DISTINCT us.user_pseudo_id || us.session_id) AS user_sessions_count, -- kontankacja || szukałem na necie jak połączyć liczenie tych jako unikalne sesje na unikalnego użytkownika i wpałdem na takie coś ale nie wiem czy to dobrze 
  COALESCE(SUM(cs.visit_to_cart), 0) AS visit_to_cart,
  COALESCE(SUM(cs.visit_to_checkout), 0) AS visit_to_checkout,
  COALESCE(SUM(cs.visit_to_purchase), 0) AS visit_to_purchase
FROM
  user_sessions us
LEFT JOIN
  conversion_steps cs
ON
  us.user_pseudo_id = cs.user_pseudo_id and us.session_id = cs.session_id
GROUP BY
  us.event_date,
  us.source,
  us.medium,
  us.campaign
ORDER BY
  us.event_date
LIMIT
  1000;
